-- ============================================
-- BASE DE DATOS: SISTEMA DE VENTAS
-- COMPATIBLE CON POSTGRESQL
-- ============================================

-- ============================================
-- TABLA: rol
-- ============================================
CREATE TABLE rol (
    id_rol SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL
);

-- ============================================
-- TABLA: persona
-- ============================================
CREATE TABLE persona (
    id_persona SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    primer_apellido VARCHAR(100),
    segundo_apellido VARCHAR(100),
    numero_ci INT,
    complemento_ci VARCHAR(2),
    correo VARCHAR(150) UNIQUE,
    telefono VARCHAR(20),
    direccion TEXT
);

-- ============================================
-- TABLA: usuario
-- ============================================
CREATE TABLE usuario (
    id_usuario INT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    id_rol INT NOT NULL,
    CONSTRAINT fk_usuario_persona FOREIGN KEY (id_usuario) REFERENCES persona (id_persona) ON DELETE CASCADE,
    CONSTRAINT fk_usuario_rol FOREIGN KEY (id_rol) REFERENCES rol (id_rol) ON DELETE RESTRICT
);

-- ============================================
-- TABLA: distribuidor
-- ============================================
CREATE TABLE distribuidor (
    id_distribuidor SERIAL PRIMARY KEY,
    nit INT NOT NULL,
    nombre VARCHAR(150) NOT NULL,
    contacto VARCHAR(100),
    telefono VARCHAR(20),
    direccion TEXT
);

-- ============================================
-- TABLA: producto
-- ============================================
CREATE TABLE producto (
    id_producto SERIAL PRIMARY KEY,
    codigo VARCHAR(5),
    nombre VARCHAR(150) NOT NULL,
    descripcion TEXT,
    unidad VARCHAR(150),
    id_distribuidor INT NOT NULL,
    CONSTRAINT fk_producto_distribuidor FOREIGN KEY (id_distribuidor) REFERENCES distribuidor (id_distribuidor) ON DELETE CASCADE
);

-- ============================================
-- TABLA: documento
-- ============================================
CREATE TABLE documento (
    id_documento SERIAL PRIMARY KEY,
    numero INT,
    fecha TIMESTAMP
);

-- ============================================
-- TABLA: movimiento
-- ============================================
CREATE TABLE movimiento (
    id_movimiento SERIAL PRIMARY KEY,
    tipo CHAR(1),
    fecha TIMESTAMP,
    glosa VARCHAR(150),
    observacion TEXT,
    id_elaborador INT REFERENCES usuario (id_usuario) ON DELETE SET NULL,
    id_cliente INT REFERENCES persona (id_persona) ON DELETE SET NULL,
    id_documento INT REFERENCES documento (id_documento) ON DELETE SET NULL
);

-- ============================================
-- TABLA: kardex
-- ============================================
CREATE TABLE kardex (
    id_movimiento INT NOT NULL,
    id_producto INT NOT NULL,
    cantidad NUMERIC(34,15),
    unitario NUMERIC(34,15),
    suttotal NUMERIC(34,15),
    PRIMARY KEY (id_movimiento, id_producto),
    CONSTRAINT fk_kardex_movimiento FOREIGN KEY (id_movimiento) REFERENCES movimiento (id_movimiento) ON DELETE CASCADE,
    CONSTRAINT fk_kardex_producto FOREIGN KEY (id_producto) REFERENCES producto (id_producto) ON DELETE CASCADE
);


de dbdiagram.io

Table persona {
  id_persona int [pk, increment]
  nombre varchar(100)
  primer_apellido varchar(100)
  segundo_apellido varchar(100)
  numero_ci int
  complemento_ci varchar(2)
  correo varchar(150) [unique]
  telefono varchar(20)
  direccion text
}

Table usuario {
  id_usuario int [pk, not null, ref: > persona.id_persona]
  username varchar(50) [unique]
  password varchar(255)
  id_rol int [not null, ref: > rol.id_rol]
}

Table rol {
  id_rol int [pk, increment]
  nombre varchar(100)
}

Table distribuidor {
  id_distribuidor int [pk, increment]
  nit int
  nombre varchar(150)
  contacto varchar(100)
  telefono varchar(20)
  direccion text
}

Table producto {
  id_producto int [pk, increment]
  codigo varchar(5)
  nombre varchar(150)
  descripcion text
  unidad varchar(150)
  id_distribuidor int [not null, ref: > distribuidor.id_distribuidor]
}

Table movimiento {
  id_movimiento int [pk, increment]
  tipo char
  fecha datetime
  glosa varchar(150)
  observacion text
  id_elaborador int [ref: > usuario.id_usuario]
  id_cliente int [ref: > persona.id_persona]
  id_documento int [ref: > documento.id_documento]
}

Table kardex {
  id_movimiento int [pk, not null, ref: > movimiento.id_movimiento]
  id_producto int [pk, not null, ref: > producto.id_producto]
  cantidad numeric(34,15)
  unitario numeric(34,15)
  suttotal numeric(34,15)
}

Table documento {
  id_documento int [pk, increment]
  numero int
  fecha datetime
}