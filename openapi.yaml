openapi: 3.1.0
info:
  title: API Sistema de Ventas
  description: API REST para gestionar roles, usuarios, personas, productos, distribuidores, documentos, movimientos y kardex.
  version: "1.0"

servers:
  - url: http://localhost:5000/api
    description: Servidor local de desarrollo

paths:

  /rol:
    get:
      summary: Obtener todos los roles
      responses:
        '200':
          description: Lista de roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rol'
              examples:
                sample:
                  value:
                    - id_rol: 1
                      nombre: "Administrador"
                    - id_rol: 2
                      nombre: "Usuario"
    post:
      summary: Crear un nuevo rol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolInput'
            examples:
              sample:
                value:
                  nombre: "Supervisor"
      responses:
        '201':
          description: Rol creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol'
              examples:
                sample:
                  value:
                    id_rol: 3
                    nombre: "Supervisor"

  /rol/{id_rol}:
    get:
      summary: Obtener un rol por ID
      parameters:
        - in: path
          name: id_rol
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalle de rol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol'
              examples:
                sample:
                  value:
                    id_rol: 1
                    nombre: "Administrador"
        '404':
          description: Rol no encontrado

  /persona:
    get:
      summary: Obtener todas las personas
      responses:
        '200':
          description: Lista de personas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona'
              examples:
                sample:
                  value:
                    - id_persona: 1
                      nombre: "Juan"
                      primer_apellido: "Perez"
                      segundo_apellido: "Lopez"
                      numero_ci: "1234567"
                      complemento_ci: "LP"
                      correo: "juan@example.com"
                      telefono: "12345678"
                      direccion: "Calle Falsa 123"
    post:
      summary: Crear una nueva persona
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonaInput'
            examples:
              sample:
                value:
                  nombre: "Maria"
                  primer_apellido: "Gomez"
                  segundo_apellido: "Diaz"
                  numero_ci: "7654321"
                  complemento_ci: "SC"
                  correo: "maria@example.com"
                  telefono: "87654321"
                  direccion: "Av. Siempre Viva 742"
      responses:
        '201':
          description: Persona creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
              examples:
                sample:
                  value:
                    id_persona: 2
                    nombre: "Maria"
                    primer_apellido: "Gomez"
                    segundo_apellido: "Diaz"
                    numero_ci: "7654321"
                    complemento_ci: "SC"
                    correo: "maria@example.com"
                    telefono: "87654321"
                    direccion: "Av. Siempre Viva 742"

  /usuario:
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
            examples:
              sample:
                value:
                  username: "juan123"
                  password: "1234pass"
                  id_rol: 1
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
              examples:
                sample:
                  value:
                    id_usuario: 1
                    username: "juan123"
                    password: "hashed_password"
                    id_rol: 1

  /producto:
    post:
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoInput'
            examples:
              sample:
                value:
                  codigo: "P001"
                  nombre: "Laptop Dell"
                  descripcion: "Laptop para oficina"
                  unidad: "Unidad"
                  id_distribuidor: 1
      responses:
        '201':
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
              examples:
                sample:
                  value:
                    id_producto: 1
                    codigo: "P001"
                    nombre: "Laptop Dell"
                    descripcion: "Laptop para oficina"
                    unidad: "Unidad"
                    id_distribuidor: 1

  /movimiento:
    post:
      summary: Crear un nuevo movimiento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoInput'
            examples:
              sample:
                value:
                  id_producto: 1
                  cantidad: 10
                  tipo: "entrada"
                  fecha: "2025-10-21T16:00:00"
      responses:
        '201':
          description: Movimiento creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movimiento'
              examples:
                sample:
                  value:
                    id_movimiento: 1
                    id_producto: 1
                    cantidad: 10
                    tipo: "entrada"
                    fecha: "2025-10-21T16:00:00"

components:
  schemas:
    Rol:
      type: object
      properties:
        id_rol:
          type: integer
        nombre:
          type: string
    RolInput:
      type: object
      properties:
        nombre:
          type: string
      required:
        - nombre

    Persona:
      type: object
      properties:
        id_persona:
          type: integer
        nombre:
          type: string
        primer_apellido:
          type: string
        segundo_apellido:
          type: string
        numero_ci:
          type: string
        complemento_ci:
          type: string
        correo:
          type: string
        telefono:
          type: string
        direccion:
          type: string
    PersonaInput:
      type: object
      properties:
        nombre:
          type: string
        primer_apellido:
          type: string
        segundo_apellido:
          type: string
        numero_ci:
          type: string
        complemento_ci:
          type: string
        correo:
          type: string
        telefono:
          type: string
        direccion:
          type: string
      required:
        - nombre

    Usuario:
      type: object
      properties:
        id_usuario:
          type: integer
        username:
          type: string
        password:
          type: string
        id_rol:
          type: integer
    UsuarioInput:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        id_rol:
          type: integer
      required:
        - username
        - password
        - id_rol

    Producto:
      type: object
      properties:
        id_producto:
          type: integer
        codigo:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        unidad:
          type: string
        id_distribuidor:
          type: integer
    ProductoInput:
      type: object
      properties:
        codigo:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        unidad:
          type: string
        id_distribuidor:
          type: integer
      required:
        - nombre
        - id_distribuidor

    Movimiento:
      type: object
      properties:
        id_movimiento:
          type: integer
        id_producto:
          type: integer
        cantidad:
          type: number
        tipo:
          type: string
        fecha:
          type: string
          format: date-time
    MovimientoInput:
      type: object
      properties:
        id_producto:
          type: integer
        cantidad:
          type: number
        tipo:
          type: string
        fecha:
          type: string
          format: date-time
      required:
        - id_producto
        - cantidad
        - tipo
